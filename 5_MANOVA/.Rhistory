age <- client$age
View(client)
client_data <- data.frame(
safemoney = client$safemoney,
riskymoney = client$riskymoney
)
age <- client$age
mvn(client[client$age == "adult"])
client[client$age == "adult"]
client$age
client$age == "adult"
mvn(client[client$age == "adult",])
client[client$age == "adult",]
mvn(client_data[client$age == "adult",])
mvn(client_data[client$age == "old",])
mvn(client_data[client$age == "young",])
Sadult <-  cov(client_data[client$age == "adult",])
Syoung <-  cov(client_data[client$age == "young",])
Sold <- cov(client_data[client$age == "old",])
Sold
# covariance with same structur
boxM(client, age)
# covariance with same structur
boxM(client_data, age)
fit <- manova(as.matrix(client_data) ~ age)
summary.manova(fit)
unique(client$age)
length(unique(client$age))
k <- p * g * (g - 1) / 2
# c) BI
aplha <- 0.1
g <- length(unique(client$age)) # two groups
p <- ncol(client_data) # number of features
n <- nrow(client_data)
k <- p * g * (g - 1) / 2
qT <- qt(1 - alpha / (2 * k), n - g)
# c) BI
alpha <- 0.1
g <- length(unique(client$age)) # two groups
p <- ncol(client_data) # number of features
n <- nrow(client_data)
k <- p * g * (g - 1) / 2
qT <- qt(1 - alpha / (2 * k), n - g)
W <- summary.manova(fit)$SS$Residuals
W
m  <- sapply(client_data, mean)         # estimates mu
m
m_adult <- sapply(client_data[client$age == "adult",], mean)    # estimates mu.0 = mu + tau.0
m_young <- sapply(client_data[client$age == "young",], mean)    # estimates mu.1 = mu + tau.1
m_old <- sapply(client_data[client$age == "old",], mean)
summary.aov(fit)
length(client$age == "adult")
sum(client$age == "adult")
inf_young_old <- m_old - m_young - qT*sqrt((1/sum(client$age == "old") + 1/sum(client$age == "young"))*diag(W)/(n-g))
sup_young_old <- m_old - m_young + qT*sqrt((1/sum(client$age == "old") + 1/sum(client$age == "young"))*diag(W)/(n-g))
CI <- list(adult_young    = cbind(inf_adult_young, m_adult - m_young, sup_adult_young),
setosa_virginica     = cbind(inf_adult_old, m_adult - m_old, sup_adult_old),
versicolor_virginica = cbind(inf_young_old, m_old - m_young, sup_young_old))
inf_young_old <- m_old - m_young - qT*sqrt((1/sum(client$age == "old") + 1/sum(client$age == "young"))*diag(W)/(n-g))
sup_young_old <- m_old - m_young + qT*sqrt((1/sum(client$age == "old") + 1/sum(client$age == "young"))*diag(W)/(n-g))
CI <- list(adult_young    = cbind(inf_adult_young, m_adult - m_young, sup_adult_young),
setosa_virginica     = cbind(inf_adult_old, m_adult - m_old, sup_adult_old),
versicolor_virginica = cbind(inf_young_old, m_old - m_young, sup_young_old))
inf_adult_young <- m_adult - m_young - qT*sqrt((1/sum(client$age == "adult") + 1/sum(client$age == "young"))*diag(W)/(n-g))
sup_adult_young <- m_adult - m_young + qT*sqrt((1/sum(client$age == "adult") + 1/sum(client$age == "young"))*diag(W)/(n-g))
inf_adult_old <- m_adult - m_old - qT*sqrt((1/sum(client$age == "adult") + 1/sum(client$age == "old"))*diag(W)/(n-g))
sup_adult_old <- m_adult - m_old + qT*sqrt((1/sum(client$age == "adult") + 1/sum(client$age == "old"))*diag(W)/(n-g))
inf_young_old <- m_old - m_young - qT*sqrt((1/sum(client$age == "old") + 1/sum(client$age == "young"))*diag(W)/(n-g))
sup_young_old <- m_old - m_young + qT*sqrt((1/sum(client$age == "old") + 1/sum(client$age == "young"))*diag(W)/(n-g))
CI <- list(adult_young    = cbind(inf_adult_young, m_adult - m_young, sup_adult_young),
setosa_virginica     = cbind(inf_adult_old, m_adult - m_old, sup_adult_old),
versicolor_virginica = cbind(inf_young_old, m_old - m_young, sup_young_old))
CI
plot(age, client_data, col=rainbow(5)[2:5], ylim=c(0,10),xlab='')
age
length(client_data)
plot(age, client_data$safemoney, col=rainbow(5)[2:5], ylim=c(0,10),xlab='')
CI
client <- read.table('client_class.txt', header=T)  # Clustering already performed at
# point a), labels inserted as 1st
# column
head(client)
dim(client)
# prepare data
var.risp <- client[,2:3]
group.names <- client[,1]
dim(var.risp)[2]
levels(group.names)
# variables:
p <- 2
g <- 3
i1 <- which(group.names=='young')
i2 <- which(group.names=='adult')
i3 <- which(group.names=='old')
ng <- c(length(i1),length(i2),length(i3))
ng
N <- sum(ng)
# verify assumptions
# 1) normality
Ps <- c(mcshapiro.test(var.risp[ i1, ])$p,
mcshapiro.test(var.risp[ i2, ])$p,
mcshapiro.test(var.risp[ i3, ])$p)
Ps
# 2) homogeneity in variance
S1 <-  cov(var.risp[ i1, ])
S2 <-  cov(var.risp[ i2, ])
S3 <-  cov(var.risp[ i3, ])
x11()
par(mfrow=c(1,3))
image(S1, col=heat.colors(100),main='Cov. S1', asp=1, axes = FALSE, breaks = quantile(rbind(S1,S2,S3), (0:100)/100, na.rm=TRUE))
image(S2, col=heat.colors(100),main='Cov. S2', asp=1, axes = FALSE, breaks = quantile(rbind(S1,S2,S3), (0:100)/100, na.rm=TRUE))
image(S3, col=heat.colors(100),main='Cov. S3', asp=1, axes = FALSE, breaks = quantile(rbind(S1,S2,S3), (0:100)/100, na.rm=TRUE))
dev.off()
# Fit the model:
fit <- manova(as.matrix(var.risp) ~ group.names)
summary.manova(fit,test="Wilks")
# who's the responsible?
summary.aov(fit,test="Wilks")
### question c)
alpha <- 0.10
k <- p*g*(g-1)/2
k
qT <- qt(1-alpha/(2*k), N-g)
# I need the diagonal of W
fit$res   # residuals of the estimated model
W <- diag(t(fit$res) %*% fit$res)/(N-g)
W
# mean within the groups
m1 <- colMeans(var.risp[i1,])
m2 <- colMeans(var.risp[i2,])
m3 <- colMeans(var.risp[i3,])
m1
m2
m3
Bf12 <- cbind(m1-m2 - qt(1 -alpha/(2*k), N-g) * sqrt((1/ng[1]+1/ng[2])*W), m1-m2, m1-m2 + qt(1 -alpha/(2*k), N-g) * sqrt((1/ng[1]+1/ng[2])*W))
Bf23 <- cbind(m2-m3 - qt(1 -alpha/(2*k), N-g) * sqrt((1/ng[2]+1/ng[3])*W), m2-m3, m2-m3 + qt(1 -alpha/(2*k), N-g) * sqrt((1/ng[2]+1/ng[3])*W))
Bf31 <- cbind(m3-m1 - qt(1 -alpha/(2*k), N-g) * sqrt((1/ng[3]+1/ng[1])*W), m3-m1, m3-m1 + qt(1 -alpha/(2*k), N-g) * sqrt((1/ng[3]+1/ng[1])*W))
IC <- list(young_adult=Bf12, adult_old=Bf23, old_young=Bf31)
IC
CI <- list(adult_young    = cbind(inf_adult_young, m_adult - m_young, sup_adult_young),
setosa_virginica     = cbind(inf_adult_old, m_adult - m_old, sup_adult_old),
versicolor_virginica = cbind(inf_young_old, m_old - m_young, sup_young_old))
CI
time <- read.table("time.txt", h=TRUE)
View(time)
View(time)
durata <- time$durata
AR <- time$AR
FF <- time$FF
AR <- factor(time$AR)
FF <- factor(time$FF)
FF
AR
fit.aov.add <- aov(durata ~ AR+FF)
summary.aov(fit.aov.add)
sapply(durata[time$AR == "aero_centro" & time$FF == "feriale"], mean)
durata[time$AR == "aero_centro" & time$FF == "feriale"]
mean_ac_feriale <- sapply(durata[time$AR == "aero_centro" & time$FF == "feriale"], mean)
mean_ac_feriale <- mean(durata[time$AR == "aero_centro" & time$FF == "feriale"])
mean_ac_festivo <- mean(durata[time$AR == "aero_centro" & time$FF == "festivo"])
mean_ca_feriale <- mean(durata[time$AR == "centro_aero" & time$FF == "feriale"])
mean_ca_festivo <- mean(durata[time$AR == "centro_aero" & time$FF == "festivo"])
penguins
penguins
# one feature and two factors => Two way Anova
penguins <- read.table("penguins.txt", h=TRUE)
penguins
species <- factor(penguins$species)
gender <- factor(penguins$gender)
species_gender <- factor(paste(species, gender))
weight <- penguins$weight
g <- length(levels(species))
b <- length(levels(gender))
n <- dim(penguins)[1]/(b*g) # balanced experiment (15 observations for each group)
M           <- mean(penguins$weight) # overall mean
Mgender      <- tapply(penguins$weight, gender, mean) # mean per gender
Mspecies       <- tapply(penguins$weight, species, mean) # mean per species
Mspecies_gender <- tapply(penguins$weight, species_gender, mean) # mean per gender x species type
species_gender
# check noramlity assumption
shapiro.test(weight[species_gender == levels(species_gender)[1]])
shapiro.test(weight[species_gender == levels(species_gender)[2]])
shapiro.test(weight[species_gender == levels(species_gender)[3]])
shapiro.test(weight[species_gender == levels(species_gender)[4]])
shapiro.test(weight[species_gender == levels(species_gender)[5]])
shapiro.test(weight[species_gender == levels(species_gender)[6]])
# 2) homogeneity of variances
bartlett.test(weight, species_gender)
plot(species_gender, penguins$weight, col=rainbow(5)[2:5], ylim=c(0,10),xlab='')
par(mfrow=c(1,1)) # probably we will notice difference among species
fit.aov2.int <- aov(weight ~ species + gender + species:gender)
summary.aov(fit.aov2.int)
fit.aov2 <- aov(weight ~ species + gender)
summary.aov(fit.aov2)
fit.aov2_sp <- aov(weight ~ species) # So now its like one-way anova
summary.aov(fit.aov2_sp)
# check assumptions for species
# check noramlity assumption
shapiro.test(weight[species == levels(species)[1]])
shapiro.test(weight[species == levels(species)[2]])
shapiro.test(weight[species == levels(species)[3]])
# 2) homogeneity of variances
bartlett.test(weight, species)
# Confidence Intervals ---------------------------------------------------------
# b)
DF <- fit.aov2_sp$df
fit.aov2_sp
var1 <- var(weight[species == levels(species)[1]])
var2 <- var(weight[species == levels(species)[2]])
var3 <- var(weight[species == levels(species)[3]])
Spooled <- ((30-1)*var1 + (30-1)*var2 + (30-1)*var3)/(90 - 3)
Spooled
fit.aov2_sp
summary(fit.aov2_sp)
Spooled
fit.aov2_sp$df.residual
20.97/DF
summary.aov(fit.aov.add)
time <- read.table("time.txt", h=TRUE)
durata <- time$durata
AR <- factor(time$AR)
FF <- factor(time$FF)
fit.aov.add <- aov(durata ~ AR+FF)
summary.aov(fit.aov.add)
mean_ac_feriale <- mean(durata[time$AR == "aero_centro" & time$FF == "feriale"])
mean_ac_festivo <- mean(durata[time$AR == "aero_centro" & time$FF == "festivo"])
mean_ca_feriale <- mean(durata[time$AR == "centro_aero" & time$FF == "feriale"])
mean_ca_festivo <- mean(durata[time$AR == "centro_aero" & time$FF == "festivo"])
Spooled <- 88.95/17
g <- 2
b <- 2
p <- 1
n <- 5
N <- n*g*b
# Verify the assumptions
# 1) normality (univariate) in each group
Ps <- c(shapiro.test(durata[ AR=='aero_centro' & FF=='festivo' ])$p,
shapiro.test(durata[ AR=='aero_centro' & FF=='feriale' ])$p,
shapiro.test(durata[ AR=='centro_aero' & FF=='festivo' ])$p,
shapiro.test(durata[ AR=='centro_aero' & FF=='feriale' ])$p)
Ps
# 2) homogeneity of variances
bartlett.test(list(durata[ AR=='aero_centro' & FF=='festivo' ],
durata[ AR=='aero_centro' & FF=='feriale' ],
durata[ AR=='centro_aero' & FF=='festivo' ],
durata[ AR=='centro_aero' & FF=='feriale' ]))
# Fit the model:
fit <- aov(durata ~ AR + FF)
summary(fit)
names(fit)
# Estimate variances
W <- sum(fit$residuals^2)  # SS_res
var <- W/(g*b*n-g-b+1)     # SS_res/gdl(res)
var
Spooled <- 88.95/17
shapiro.test(durata[time$AR == "aero_centro" & time$FF == "feriale"])
shapiro.test(durata[time$AR == "aero_centro" & time$FF == "feriale"])
shapiro.test(durata[time$AR == "aero_centro" & time$FF == "festivo"])
shapiro.test(durata[time$AR == "centro_aero" & time$FF == "feriale"])
shapiro.test(durata[time$AR == "centro_aero" & time$FF == "festivo"])
bartlett.test(durata, factor(paste(AR, FF)))
factor(paste(AR, FF))
bartlett.test(durata, factor(paste(AR, FF)))
sum(time$AR == "aero_centro" & time$FF == "feriale")
sum(time$AR == "aero_centro" & time$FF == "festivo")
Spooled <- 88.95/17
mean_ac_feriale <- mean(durata[time$AR == "aero_centro" & time$FF == "feriale"])
mean_ac_festivo <- mean(durata[time$AR == "aero_centro" & time$FF == "festivo"])
mean_ca_feriale <- mean(durata[time$AR == "centro_aero" & time$FF == "feriale"])
mean_ca_festivo <- mean(durata[time$AR == "centro_aero" & time$FF == "festivo"])
euros <- read.table('time.txt', header=T)
euros
attach(euros)
g <- 2
b <- 2
p <- 1
n <- 5
N <- n*g*b
# Verify the assumptions
# 1) normality (univariate) in each group
Ps <- c(shapiro.test(durata[ AR=='aero_centro' & FF=='festivo' ])$p,
shapiro.test(durata[ AR=='aero_centro' & FF=='feriale' ])$p,
shapiro.test(durata[ AR=='centro_aero' & FF=='festivo' ])$p,
shapiro.test(durata[ AR=='centro_aero' & FF=='feriale' ])$p)
Ps
# 2) homogeneity of variances
bartlett.test(list(durata[ AR=='aero_centro' & FF=='festivo' ],
durata[ AR=='aero_centro' & FF=='feriale' ],
durata[ AR=='centro_aero' & FF=='festivo' ],
durata[ AR=='centro_aero' & FF=='feriale' ]))
# Fit the model:
fit <- aov(durata ~ AR + FF)
summary(fit)
names(fit)
# Estimate variances
W <- sum(fit$residuals^2)  # SS_res
var <- W/(g*b*n-g-b+1)     # SS_res/gdl(res)
var
# Estimate the great mean mu:
m <- mean(euros[,1])
# Estimate tau.i, beta.j:
tauAC  <- mean(euros[euros$AR=='aero_centro',1]) - m  # tau.1
tauCA  <- mean(euros[euros$AR=='centro_aero',1]) - m  # tau.2
betaFest <- mean(euros[euros$FF=='festivo',1]) - m  # beta.1
betaFer  <- mean(euros[euros$FF=='feriale',1]) - m  # beta.2
# Point-wise estimates of mean duration of travels
# (model without interaction!)
mAC_Fest <- m + tauAC + betaFest
mAC_Fer  <- m + tauAC + betaFer
mCA_Fest <- m + tauCA + betaFest
mCA_Fer  <- m + tauCA + betaFer
mean_ac_feriale <- mean(durata[time$AR == "aero_centro" & time$FF == "feriale"])
mean_ac_festivo <- mean(durata[time$AR == "aero_centro" & time$FF == "festivo"])
mean_ca_feriale <- mean(durata[time$AR == "centro_aero" & time$FF == "feriale"])
mean_ca_festivo <- mean(durata[time$AR == "centro_aero" & time$FF == "festivo"])
Spooled <- 88.95/17
shapiro.test(durata[time$AR == "aero_centro" & time$FF == "feriale"])
shapiro.test(durata[time$AR == "aero_centro" & time$FF == "festivo"])
shapiro.test(durata[time$AR == "centro_aero" & time$FF == "feriale"])
shapiro.test(durata[time$AR == "centro_aero" & time$FF == "festivo"])
bartlett.test(durata, factor(paste(AR, FF)))
# b)
fit.aov.time <- aov(durata ~ AR)
summary.aov(fit.aov.time)
# c)
fit.aov.weekend <- aov(durata ~ FF)
summary.aov(fit.aov.weekend)
# b)
fit.aov.direction <- aov(durata ~ AR)
summary.aov(fit.aov.direction) # there are no significant difference in means among direction
summary.aov(fit.aov.add)
summary.aov(fit.aov.direction) # there are no significant difference in means among direction
summary.aov(fit.aov.weekend) # so there are significant difference in means among days
PV <- read.table("PV.txt", h=TRUE)
View(PV)
PV <- read.table('PV.txt', header = T)
PV
N <- dim(PV)[1]
p <- 2
g <- b <- 2
n <- N/(g*b)
n
var.risp <- PV[,1:2]
man.int <- manova(as.matrix(var.risp) ~  HPV + REL + HPV * REL, data = PV)
summary(man.int, test = 'Wilks')
HPV * REL
HPV : REL
attach(PV)
PV
N <- dim(PV)[1]
p <- 2
g <- b <- 2
n <- N/(g*b)
n
var.risp <- PV[,1:2]
attach(PV)
HPV : REL
HPV * REL
man.int <- manova(as.matrix(var.risp) ~  HPV + REL + HPV * REL, data = PV)
summary(man.int, test = 'Wilks')
man.int <- manova(as.matrix(var.risp) ~  HPV + REL + HPV : REL, data = PV)
summary(man.int, test = 'Wilks')
# We reject the test, i.e., we have evidence to state that the
# treatment (feed supplement) has an effect on the growth rate
# of chicken.
# Which supplement is responsible for this? To see this, we need to (какой из классов выбивается из нулевой гипотезы)
# do g * (g - 1) / 2 comparisons.
# We use Bonferroni
qf(3,36)
# We reject the test, i.e., we have evidence to state that the
# treatment (feed supplement) has an effect on the growth rate
# of chicken.
# Which supplement is responsible for this? To see this, we need to (какой из классов выбивается из нулевой гипотезы)
# do g * (g - 1) / 2 comparisons.
# We use Bonferroni
qf(1-0.05,3,36)
1-pf(3,36)
1-pf(3.52,3,36)
plastic <- read.table('T6-4.dat', col.names=c('Ex','Ad','Tr','Gl','Op'))
plastic
View(plastic)
ExAd <- factor(paste(Ex, Ad, sep=''))
ExAd
Ex   <- factor(plastic$Ex, labels=c('L','H')) # Treat.1
Ad   <- factor(plastic$Ad, labels=c('L','H')) # Treat.2
ExAd <- factor(paste(Ex, Ad, sep=''))
ExAd
plastic3  <- plastic[,3:5]
Ex   <- factor(plastic$Ex, labels=c('L','H')) # Treat.1
Ad   <- factor(plastic$Ad, labels=c('L','H')) # Treat.2
ExAd <- factor(paste(Ex, Ad, sep=''))
ExAd
plastic3  <- plastic[,3:5]
### Graphical exploration of the data
# effect of the treatments + their interaction on the first variable
layout(matrix(c(1,1,2,3), 2, byrow=T))
boxplot(plastic3[,1] ~ ExAd, main='Model with Interac. Extrusion+Additive (Tear Resistance)',
ylab='Tr', col='grey95')
boxplot(plastic3[,1] ~ Ex, main='Only Factor Extrusion', ylab='Tr', col=c('red','blue'))
boxplot(plastic3[,1] ~ Ad, main='Only Factor Additive', ylab='Tr', col=c('forestgreen','gold'))
# effect of the treatments + their interaction on the second variable
layout(matrix(c(1,1,2,3), 2, byrow=T))
boxplot(plastic3[,2] ~ ExAd, main='Model with Interac. Extrusion+Additive (Gloss)',
ylab='Gl', col='grey95')
boxplot(plastic3[,2] ~ Ex, main='Only Factor Extrusion', ylab='Gl', col=c('red','blue'))
boxplot(plastic3[,2] ~ Ad, main='Only Factor Additive', ylab='Gl', col=c('forestgreen','gold'))
# effect of the treatments + their interaction on the third variable
layout(matrix(c(1,1,2,3), 2, byrow=T))
boxplot(plastic3[,3] ~ ExAd, main='Model with Interac. Extrusion+Additive (Opacity)',
ylab='Op', col='grey95')
boxplot(plastic3[,3] ~ Ex, main='Only Factor Extrusion', ylab='Op', col=c('red','blue'))
boxplot(plastic3[,3] ~ Ad, main='Only Factor Additive', ylab='Op', col=c('forestgreen','gold'))
par(mfrow=c(1,1))
### Verify the assumptions (although we only have 5 data in each group!)
# 1) normality (multivariate) in each group (4 test)
Ps <- c(mvn(plastic3[ExAd==levels(ExAd)[1],],)$multivariateNormality$`p value`,
mvn(plastic3[ExAd==levels(ExAd)[2],],)$multivariateNormality$`p value`,
mvn(plastic3[ExAd==levels(ExAd)[3],],)$multivariateNormality$`p value`,
mvn(plastic3[ExAd==levels(ExAd)[4],],)$multivariateNormality$`p value`)
Ps
# 2) homogeneity of the covariance (qualitatively)
S1 <-  cov(plastic3[ ExAd==levels(ExAd)[1],])
S2 <-  cov(plastic3[ ExAd==levels(ExAd)[2],])
S3 <-  cov(plastic3[ ExAd==levels(ExAd)[3],])
S4 <-  cov(plastic3[ ExAd==levels(ExAd)[4],])
par(mfrow=c(1,4))
image(S1, col=heat.colors(100),main='Cov. S1', asp=1, axes = FALSE, breaks = quantile(rbind(S1,S2,S3,S4), (0:100)/100, na.rm=TRUE))
image(S2, col=heat.colors(100),main='Cov. S2', asp=1, axes = FALSE, breaks = quantile(rbind(S1,S2,S3,S4), (0:100)/100, na.rm=TRUE))
image(S3, col=heat.colors(100),main='Cov. S3', asp=1, axes = FALSE, breaks = quantile(rbind(S1,S2,S3,S4), (0:100)/100, na.rm=TRUE))
image(S4, col=heat.colors(100),main='Cov. S4', asp=1, axes = FALSE, breaks = quantile(rbind(S1,S2,S3,S4), (0:100)/100, na.rm=TRUE))
# Two-ways MANOVA
# Model with interaction (complete model):
# X.ijk = mu + tau.i + beta.j + gamma.ij + eps.ijk; eps.ijk ~ N_p(0,Sigma), [p=3]
#     i=1,2 (effect Extrusion), j=1,2 (effect Additive),
#     X.ijs, mu, tau.i, beta.j, gamma.ij in R^3
fit <- manova(as.matrix(plastic3) ~ Ex + Ad + Ex:Ad)
summary.manova(fit)
### Model without interaction (additive model):
### X.ijk = mu + tau.i + beta.j + eps.ijk; eps.ijk~N_p(0,Sigma), [p=3]
###     i=1,2 (effect Extrusion), j=1,2 (effect additive),
###     X.ijs, mu, tau.i, beta.j, in R^3
fit2<- manova(as.matrix(plastic3) ~ Ex + Ad)
summary.manova(fit2)
summary.manova(fit)
plastic <- read.table('T6-4.dat', col.names=c('Ex','Ad','Tr','Gl','Op'))
plastic
Ex   <- factor(plastic$Ex, labels=c('L','H')) # Treat.1
Ad   <- factor(plastic$Ad, labels=c('L','H')) # Treat.2
ExAd <- factor(paste(Ex, Ad, sep=''))
ExAd
plastic3  <- plastic[,3:5]
### Graphical exploration of the data
# effect of the treatments + their interaction on the first variable
layout(matrix(c(1,1,2,3), 2, byrow=T))
boxplot(plastic3[,1] ~ ExAd, main='Model with Interac. Extrusion+Additive (Tear Resistance)',
ylab='Tr', col='grey95')
boxplot(plastic3[,1] ~ Ex, main='Only Factor Extrusion', ylab='Tr', col=c('red','blue'))
boxplot(plastic3[,1] ~ Ad, main='Only Factor Additive', ylab='Tr', col=c('forestgreen','gold'))
# effect of the treatments + their interaction on the second variable
layout(matrix(c(1,1,2,3), 2, byrow=T))
boxplot(plastic3[,2] ~ ExAd, main='Model with Interac. Extrusion+Additive (Gloss)',
ylab='Gl', col='grey95')
boxplot(plastic3[,2] ~ Ex, main='Only Factor Extrusion', ylab='Gl', col=c('red','blue'))
boxplot(plastic3[,2] ~ Ad, main='Only Factor Additive', ylab='Gl', col=c('forestgreen','gold'))
# effect of the treatments + their interaction on the third variable
layout(matrix(c(1,1,2,3), 2, byrow=T))
boxplot(plastic3[,3] ~ ExAd, main='Model with Interac. Extrusion+Additive (Opacity)',
ylab='Op', col='grey95')
boxplot(plastic3[,3] ~ Ex, main='Only Factor Extrusion', ylab='Op', col=c('red','blue'))
boxplot(plastic3[,3] ~ Ad, main='Only Factor Additive', ylab='Op', col=c('forestgreen','gold'))
par(mfrow=c(1,1))
### Verify the assumptions (although we only have 5 data in each group!)
# 1) normality (multivariate) in each group (4 test)
Ps <- c(mvn(plastic3[ExAd==levels(ExAd)[1],],)$multivariateNormality$`p value`,
mvn(plastic3[ExAd==levels(ExAd)[2],],)$multivariateNormality$`p value`,
mvn(plastic3[ExAd==levels(ExAd)[3],],)$multivariateNormality$`p value`,
mvn(plastic3[ExAd==levels(ExAd)[4],],)$multivariateNormality$`p value`)
Ps
### Verify the assumptions (although we only have 5 data in each group!)
# 1) normality (multivariate) in each group (4 test)
Ps <- c(mvn(plastic3[ExAd==levels(ExAd)[1],],)$multivariateNormality$`p value`,
mvn(plastic3[ExAd==levels(ExAd)[2],],)$multivariateNormality$`p value`,
mvn(plastic3[ExAd==levels(ExAd)[3],],)$multivariateNormality$`p value`,
mvn(plastic3[ExAd==levels(ExAd)[4],],)$multivariateNormality$`p value`)
Ps
# 2) homogeneity of the covariance (qualitatively)
S1 <-  cov(plastic3[ ExAd==levels(ExAd)[1],])
S2 <-  cov(plastic3[ ExAd==levels(ExAd)[2],])
S3 <-  cov(plastic3[ ExAd==levels(ExAd)[3],])
S4 <-  cov(plastic3[ ExAd==levels(ExAd)[4],])
par(mfrow=c(1,4))
image(S1, col=heat.colors(100),main='Cov. S1', asp=1, axes = FALSE, breaks = quantile(rbind(S1,S2,S3,S4), (0:100)/100, na.rm=TRUE))
image(S2, col=heat.colors(100),main='Cov. S2', asp=1, axes = FALSE, breaks = quantile(rbind(S1,S2,S3,S4), (0:100)/100, na.rm=TRUE))
image(S3, col=heat.colors(100),main='Cov. S3', asp=1, axes = FALSE, breaks = quantile(rbind(S1,S2,S3,S4), (0:100)/100, na.rm=TRUE))
image(S4, col=heat.colors(100),main='Cov. S4', asp=1, axes = FALSE, breaks = quantile(rbind(S1,S2,S3,S4), (0:100)/100, na.rm=TRUE))
# Two-ways MANOVA
# Model with interaction (complete model):
# X.ijk = mu + tau.i + beta.j + gamma.ij + eps.ijk; eps.ijk ~ N_p(0,Sigma), [p=3]
#     i=1,2 (effect Extrusion), j=1,2 (effect Additive),
#     X.ijs, mu, tau.i, beta.j, gamma.ij in R^3
fit <- manova(as.matrix(plastic3) ~ Ex + Ad + Ex:Ad)
summary.manova(fit)
### Model without interaction (additive model):
### X.ijk = mu + tau.i + beta.j + eps.ijk; eps.ijk~N_p(0,Sigma), [p=3]
###     i=1,2 (effect Extrusion), j=1,2 (effect additive),
###     X.ijs, mu, tau.i, beta.j, in R^3
fit2<- manova(as.matrix(plastic3) ~ Ex + Ad)
summary.manova(fit2)
# ANOVA on the components (we look at the 3 axes-directions in R^3
#                          separately)
summary.aov(fit2)
View(plastic)
