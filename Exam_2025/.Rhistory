library(nlmeU) ## --> for the dataset
library(nlme)  ## --> for models implementation
library(corrplot)
library(lattice)
library(plot.matrix)
data <- read.table("plants_mood.txt", h=TRUE)
View(data)
View(data)
View(data)
View(data)
View(data)
data["zone_id"]
View(data)
data["zone_id"] == 1
sum(data["zone_id"] == 1)
sum(data["zone_id"] == 2)
sum(data["zone_id"] == 3)
sum(data["zone_id"] == 4)
sum(data["zone_id"] == 5)
sum(data["zone_id"] == 6)
sum(data["zone_id"] == 7)
unique(data["zone_id"])
for (i in 1:20){
print(sum(data["zone_id"] == 7))
}
rep(100, 20)
rep(100, 20*100)
View(data)
data.mood
data <- data.frame(
mood = data["mood"],
plants = data["plants"],
light = data["light"],
social = data["social"],
zone_id = data["zone_id"],
num_part = rep(100, 20*100)
)
View(data)
lm <- lm(mood ~ 1:num_part + plants + light + social, data)
summary(lm)
data <- read.table("plants_mood.txt", h=TRUE)
# all groups has 100
for (i in 1:20){
print(sum(data["zone_id"] == 7))
}
data <- data.frame(
mood = data["mood"],
plants = data["plants"],
light = data["light"],
social = data["social"],
zone_id = data["zone_id"],
num_part = as.factor(rep(100, 20*100))
)
lme_model <- lme(mood ~ 1:num_part + plants + light + social, random=~1|num_part,data)
lme_model <- lme(mood ~ 1:num_part + plants + light + social, random=~1, data)
lme_model <- lme(mood ~ 1:num_part + plants + light + social, data)
lme_model <- lme(mood ~ plants + light + social, data)
lm_model <- lm(mood ~ plants + light + social, data)
summary(lm_model)
lm_model <- lm(mood ~ plants + light + social, data)
summary(lm_model)
get_variance_random(lm_model)
library(nlmeU)
library(corrplot)
library(nlme)
library(lattice)
library(plot.matrix)
library(lme4)
library(insight)
get_variance_random(lm_model)
lm_model <- lm(mood ~ plants + light + social, data)
summary(lm_model)
get_variance_random(lm_model)
lm_model <- lme(mood ~ plants + light + social, data)
VarCorr(lm_model)
lm_model <- lme(mood ~ plants, data)
data <- read.table("plants_mood.txt", h=TRUE)
lm_model <- lme(mood ~ plants, data)
View(data)
data <- read.table("plants_mood.txt", h=TRUE)
lme_model <- lme(mood ~ plants + light + social, data)
summary(lm)
lme_model <- lme(mood ~ 1, data)
summary(lm_model)
lme_model <- lme(mood ~ plants + light + social, data)
lme_model <- lme(mood ~ plants + light + social, random ~ 1, data)
lme_model <- lme(mood ~ plants + light + social, random ~ 1:zone_id, data)
lme_model <- lme(mood ~ plants + light + social, random = ~ 1:zone_id, data)
lme_model <- lme(mood ~ plants + light + social, random = ~ 1, data)
library(MVN)
library(car)
library(heplots)
data <- read.table("greenhouse.txt", h=TRUE)
data
View(data)
fit <- manova(data ~ data["auto_watering"])
fit <- manova(as.matrix(data)~ data["auto_watering"])
data_value <- data[,1:2]
View(data_value)
fit <- manova(data_values~ data["auto_watering"])
fit <- manova(data_value~ data["auto_watering"])
fit <- manova(data_value~ data["auto_watering"])
fit <- manova(as.matrix(data_value) ~ data["auto_watering"])
fit <- manova(as.matrix(data_value) ~ as.factor(data["auto_watering"]))
auto   <- factor(data$auto_watering) # Treat.1
air   <- factor(data$air_purifier) # Treat.2
fit <- manova(as.matrix(data_value) ~ auto)
summary.manova(fit)
ExAd <- factor(paste(auto, air, sep=''))
fit <- manova(as.matrix(data_value) ~ ExAd)
summary.manova(fit)
fit <- manova(as.matrix(data_value) ~ auto + air + auto:air)
summary.manova(fit)
Ps <- c(mvn(data_value[ExAd==levels(ExAd)[1],],)$multivariateNormality$`p value`,
mvn(data_value[ExAd==levels(ExAd)[2],],)$multivariateNormality$`p value`,
mvn(data_value[ExAd==levels(ExAd)[3],],)$multivariateNormality$`p value`,
mvn(data_value[ExAd==levels(ExAd)[4],],)$multivariateNormality$`p value`)
Ps
S1 <-  cov(data_value[ ExAd==levels(ExAd)[1],])
S2 <-  cov(data_value[ ExAd==levels(ExAd)[2],])
S3 <-  cov(data_value[ ExAd==levels(ExAd)[3],])
S4 <-  cov(data_value[ ExAd==levels(ExAd)[4],])
par(mfrow=c(1,4))
image(S1, col=heat.colors(100),main='Cov. S1', asp=1, axes = FALSE, breaks = quantile(rbind(S1,S2,S3,S4), (0:100)/100, na.rm=TRUE))
image(S2, col=heat.colors(100),main='Cov. S2', asp=1, axes = FALSE, breaks = quantile(rbind(S1,S2,S3,S4), (0:100)/100, na.rm=TRUE))
image(S3, col=heat.colors(100),main='Cov. S3', asp=1, axes = FALSE, breaks = quantile(rbind(S1,S2,S3,S4), (0:100)/100, na.rm=TRUE))
image(S4, col=heat.colors(100),main='Cov. S4', asp=1, axes = FALSE, breaks = quantile(rbind(S1,S2,S3,S4), (0:100)/100, na.rm=TRUE))
S1, S2, S3, S4
summary(boxM(data_value, ExAd))
summary.manova(fit)
plot(data_value)
ExAd
lda.model <- lda(data_value, air)
library(MASS)
lda.model <- lda(data_value, air)
lda.model
# LDA
lda_predicted_labels <- vector(length = dim(sculpt)[1])
# LDA
lda_predicted_labels <- vector(length = dim(data_value)[1])
for(i in 1:dim(sculpt)[1]){
LdaCV.i <- lda(data_value[-i,], air[-i])
pred <- predict(LdaCV.i, data_value[i,])$class
lda_predicted_labels[i] <- as.character(pred)
}
for(i in 1:dim(data_value)[1]){
LdaCV.i <- lda(data_value[-i,], air[-i])
pred <- predict(LdaCV.i, data_value[i,])$class
lda_predicted_labels[i] <- as.character(pred)
}
lda_predicted_labels
air
TP_lda <- sum(lda_predicted_labels == "TRUE" & air == "TRUE")
FP_lda <- sum(lda_predicted_labels == "TRUE" & air == "FALSE")
FN_lda <- sum(lda_predicted_labels == "FALSE" & air == "TRUE")
TN_lda <- sum(lda_predicted_labels == "FALSE" & air == "FALSE")
(FP_lda + FN_lda)/(FP_lda + FN_lda + TN_lda + TP_lda)
library(sp)           ## Data management
library(lattice)      ## Data management
library(geoR)         ## Geostatistics
library(gstat)
data <- read.table("treegrowth.txt", h=TRUE)
data <- read.table("treegrowth.txt", h=TRUE)
coordinates(data) <- c('X', 'Y')
View(data)
coordinates(data) <- c('x', 'y')
View(data)
View(data)
View(data@data)
v <- variogram(growth~1,data)
v <- variogram(growth ~ -1 + season,data)
v
summary(v)
v <- variogram(growth ~ -1 + as.factor(season),data)
v <- variogram(growth ~ -1 + as.factor(season) + miosture,data)
v <- variogram(growth ~ -1 + as.factor(season) + moisture,data)
v <- variogram(growth ~ -1 + as.factor(season) + moisture,data)
v.fit <- fit.variogram(v, vgm(0.1, "Sph", 1000,0.1))
v.fit
plot(v)
plot(v, v.fit)
v.fit
v.fit$model
v.fit$v
v.fit
summary(v.fit)
summary(v.fit)
plot(v, v.fit)
coefficients(v.fit)
coefficients(v)
summary(v)
lm_model <- lm(growth ~ -1 + as.factor(season) + moisture, data)
summary(lm_model)
s0.new=data.frame(x=0.3, y=0.24, moisture=25.0, season=TRUE) # UTM coordinates
coordinates(s0.new)=c('x','y')
predict(v.fit, s0.new, BLUE=TRUE)
s0.new=data.frame(x=0.3, y=0.24, moisture=25.0, season=TRUE) # UTM coordinates
coordinates(s0.new)=c('x','y')
predict(v.fit, s0.new, BLUE=TRUE)
g.tr <- gstat(formula = growth ~ -1 + as.factor(season), data = data, model = v.fit)
predict(g.tr, s0.new, BLUE=TRUE)
g.tr
summary(g.tr)
g.tr$model
g.tr$model$var
predict(g.tr, s0.new, BLUE=TRUE)
s0.new=data.frame(x=0.1, y=0.2, moisture=25.0, season=TRUE) # UTM coordinates
coordinates(s0.new)=c('x','y')
g.tr <- gstat(formula = growth ~ -1 + as.factor(season), data = data, model = v.fit)
summary(g.tr)
predict(g.tr, s0.new, BLUE=TRUE)
v <- variogram(growth ~ -1 + as.factor(season):as.factor(canopy) + moisture, data)
v2 <- variogram(growth ~ -1 + as.factor(season):as.factor(canopy) + moisture, data)
summary(v2)
plot(v2)
v2.fit <- fit.variogram(v2, vgm(0.1, "Sph", 3000,0.1))
v2.fit
v2.fit <- fit.variogram(v2, vgm(0.1, "Sph", 3000,0.1), fit.sills = c(FALSE, TRUE))
v2.fit
g2.tr <- gstat(formula = growth ~ -1 + as.factor(season):as.factor(canopy) + moisture, data = data, model = v2.fit)
summary(g.tr)
lm_model <- lm(growth ~ -1 + as.factor(season):as.factor(canopy) + moisture, data)
summary(lm_model)
lm_model <- lm(growth ~ -1 + as.factor(season):as.factor(canopy) + moisture:as.factor(canopy), data)
summary(lm_model)
lme(mood ~ plants + light + social,
random = ~1 | zone_id,
data = data)
data <- data.frame(
mood = data["mood"],
plants = data["plants"],
light = data["light"],
social = data["social"],
zone_id = data["zone_id"],
num_part = as.factor(rep(100, 20*100))
)
data <- read.table("plants_mood.txt", h=TRUE)
# all groups has 100
for (i in 1:20){
print(sum(data["zone_id"] == 7))
}
lme(mood ~ plants + light + social,
random = ~1 | zone_id,
data = data)
lme_model <- lme(mood ~ plants + light + social, random = ~ 1, data)
lme_model <- lme(mood ~ plants + light + social, data)
lme(mood ~ plants + light + social,
random = ~1 | zone_id,
data = data)
lme(mood ~ plants + light + social,
data = data)
summary(g.tr)
