v.fit <- fit.variogram(v, vgm(0.1, "Sph", 1000,0.1))
v.fit
plot(v, v.fit)
v1 <- variogram(growth ~ - as.factor(season) + moisture, treegrowth)
v1
plot(v1)
v1.fit <- fit.variogram(v1, vgm(0.1, "Sph", 1000, 0.1), fit.method = 7) # 7 - by default (Weighted least squares)
# I did't indicate nugget, so model don't use it
v1.fit # here we see psill and range (estimated)
plot(v1, v1.fit)
treegrowth <- read.table("treegrowth.txt", h=TRUE)
## Define the sample coordinates (transform Table to SpatialPointsDataFrame)
coordinates(treegrowth) <- c('x', 'y')
v1 <- variogram(growth ~ -1 + as.factor(season) + moisture, treegrowth)
v1
plot(v1)
v1.fit <- fit.variogram(v1, vgm(0.1, "Sph", 1000, 0.1), fit.method = 7) # 7 - by default (Weighted least squares)
# I did't indicate nugget, so model don't use it
v1.fit # here we see psill and range (estimated)
plot(v1, v1.fit)
v1 <- variogram(growth ~ 1:as.factor(season) + moisture, treegrowth)
v1
plot(v1)
v1.fit <- fit.variogram(v1, vgm(0.1, "Sph", 1000, 0.1), fit.method = 7) # 7 - by default (Weighted least squares)
# I did't indicate nugget, so model don't use it
v1.fit # here we see psill and range (estimated)
plot(v1, v1.fit)
v1 <- variogram(growth ~ as.factor(season) + moisture, treegrowth)
v1
plot(v1)
v1.fit <- fit.variogram(v1, vgm(0.1, "Sph", 1000, 0.1), fit.method = 7) # 7 - by default (Weighted least squares)
# I did't indicate nugget, so model don't use it
v1.fit # here we see psill and range (estimated)
plot(v1, v1.fit)
v1 <- variogram(growth ~ as.factor(season) + moisture, treegrowth)
v1
plot(v1)
v1.fit <- fit.variogram(v1, vgm(0.1, "Sph", 1000, 0.1), fit.method = 7) # 7 - by default (Weighted least squares)
# I did't indicate nugget, so model don't use it
v1.fit # here we see psill and range (estimated)
plot(v1, v1.fit)
0.09237614+0.08322185
gls_model <- gls(growth ~ -1 + as.factor(season) + moisture, data)
library(nlme)
gls_model <- gls(growth ~ -1 + as.factor(season) + moisture, data)
gls_model <- gls(growth ~ as.factor(season) + moisture, data)
summary(gls_model)
v1.fit
sumary(v1.fit)
summary(v1.fit)
data <- read.table("treegrowth.txt", h=TRUE)
coordinates(data) <- c('x', 'y')
v <- variogram(growth ~ -1 + as.factor(season) + moisture, data)
summary(v)
plot(v)
v.fit <- fit.variogram(v, vgm(0.1, "Sph", 1000,0.1))
v.fit
plot(v, v.fit)
lm_model <- lm(growth ~ -1 + as.factor(season) + moisture, data)
summary(lm_model)
summary(v.fit)
summary(v)
s0.new=data.frame(x=0.1, y=0.2, moisture=25.0, season=TRUE) # UTM coordinates
coordinates(s0.new)=c('x','y')
g.tr <- gstat(formula = growth ~ -1 + as.factor(season) + moisture, data = data, model = v.fit)
summary(g.tr)
predict(g.tr, s0.new, BLUE=TRUE)
s0.new=data.frame(x=0.0, y=0.0, moisture=0.0, season=FALSE) # UTM coordinates
coordinates(s0.new)=c('x','y')
v1 <- variogram(growth ~ -1 + as.factor(season) + moisture, treegrowth)
v1
plot(v1)
v1.fit <- fit.variogram(v1, vgm(0.1, "Sph", 1000, 0.1), fit.method = 7) # 7 - by default (Weighted least squares)
# I did't indicate nugget, so model don't use it
v1.fit # here we see psill and range (estimated)
plot(v1, v1.fit)
s0.new=data.frame(x=0.0, y=0.0, moisture=0.0, season=FALSE) # UTM coordinates
s0.new=data.frame(x=0.0, y=0.0, moisture=0.0, season=FALSE) # UTM coordinates
coordinates(s0.new)=c('x','y')
g.tr <- gstat(formula = growth ~ -1 + as.factor(season) + moisture, data = treegrowth, model = v1.fit)
summary(g.tr)
predict(g.tr, s0.new, BLUE = TRUE)
s1.new=data.frame(x=0.0, y=0.0, moisture=0.0, season=TRUE) # UTM coordinates
coordinates(s0.new)=c('x','y')
s1.new=data.frame(x=0.0, y=0.0, moisture=0.0, season=TRUE) # UTM coordinates
coordinates(s1.new)=c('x','y')
predict(g.tr, s1.new, BLUE = TRUE) # var1.pred = 1.117702
s2.new=data.frame(x=0.0, y=0.0, moisture=1.0, season=TRUE) # UTM coordinates
coordinates(s2.new)=c('x','y')
predict(g.tr, s2.new, BLUE = TRUE) # var1.pred = 0.9080086 - b_0_1
s2.new=data.frame(x=0.0, y=0.0, moisture=1.0, season=FALSE) # UTM coordinates
coordinates(s2.new)=c('x','y')
predict(g.tr, s2.new, BLUE = TRUE) # var1.pred = 0.9202466 - b_1
s2.new=data.frame(x=1.0, y=5.0, moisture=1.0, season=FALSE) # UTM coordinates
coordinates(s2.new)=c('x','y')
predict(g.tr, s2.new, BLUE = TRUE) # var1.pred = 0.9202466 - b_1
predict(g.tr, s0.new, BLUE = TRUE) # var1.pred = 1.117702 - b_0_0
s2.new=data.frame(x=0.0, y=0.0, moisture=1.0, season=FALSE) # UTM coordinates
coordinates(s2.new)=c('x','y')
predict(g.tr, s2.new, BLUE = TRUE) # var1.pred = 0.9202466 - b_1
treegrowth <- read.table("treegrowth.txt", h=TRUE)
## Define the sample coordinates (transform Table to SpatialPointsDataFrame)
coordinates(treegrowth) <- c('x', 'y')
v1 <- variogram(growth ~ -1 + as.factor(season) + moisture, treegrowth)
v1
plot(v1)
v1.fit <- fit.variogram(v1, vgm(0.1, "Sph", 1000, 0.1), fit.method = 7) # 7 - by default (Weighted least squares)
# I did't indicate nugget, so model don't use it
v1.fit # here we see psill and range (estimated)
plot(v1, v1.fit)
s0.new=data.frame(x=0.0, y=0.0, moisture=0.0, season=FALSE) # UTM coordinates
coordinates(s0.new)=c('x','y')
g.tr <- gstat(formula = growth ~ -1 + as.factor(season) + moisture, data = treegrowth, model = v1.fit)
summary(g.tr)
predict(g.tr, s0.new, BLUE = TRUE) # var1.pred = 1.117702 - b_0_0
s1.new=data.frame(x=0.0, y=0.0, moisture=0.0, season=TRUE) # UTM coordinates
coordinates(s1.new)=c('x','y')
predict(g.tr, s1.new, BLUE = TRUE) # var1.pred = 0.9080086 - b_0_1
0.9202466 - 1.117702
s2.new=data.frame(x=0.0, y=0.0, moisture=1.0, season=FALSE) # UTM coordinates
coordinates(s2.new)=c('x','y')
predict(g.tr, s2.new, BLUE = TRUE) # var1.pred = 0.9202466
s2.new=data.frame(x=0.0, y=0.0, moisture=0.0, season=FALSE) # UTM coordinates
coordinates(s2.new)=c('x','y')
predict(g.tr, s2.new, BLUE = TRUE) # var1.pred = 0.9202466
s2.new=data.frame(x=0.0, y=0.0, moisture=0.0, season=FALSE) # UTM coordinates
coordinates(s2.new)=c('x','y')
predict(g.tr, s2.new, BLUE = TRUE) # var1.pred = 0.9202466
s2.new=data.frame(x=0.0, y=0.0, moisture=1.0, season=FALSE) # UTM coordinates
coordinates(s2.new)=c('x','y')
predict(g.tr, s2.new, BLUE = TRUE) # var1.pred = 0.9202466
1.12994 - 1.117702
s2.new=data.frame(x=0.0, y=0.0, moisture=0.1, season=FALSE) # UTM coordinates
coordinates(s2.new)=c('x','y')
predict(g.tr, s2.new, BLUE = TRUE) # var1.pred = 1.12994
s2.new=data.frame(x=0.0, y=0.0, moisture=1.0, season=FALSE) # UTM coordinates
coordinates(s2.new)=c('x','y')
predict(g.tr, s2.new, BLUE = TRUE) # var1.pred = 1.12994
sc.new=data.frame(x=0.0, y=0.0, moisture=0.25, season=TRUE)
coordinates(sc.new)=c('x','y')
predict(g.tr, sc.new, BLUE = TRUE)
sc.new=data.frame(x=2.0, y=3.0, moisture=0.25, season=TRUE)
coordinates(sc.new)=c('x','y')
predict(g.tr, sc.new, BLUE = TRUE)
predict(g.tr, sc.new, BLUE = FALSE)
sc.new=data.frame(x=2.0, y=3.0, moisture=25.0, season=TRUE)
coordinates(sc.new)=c('x','y')
predict(g.tr, sc.new, BLUE = TRUE)
sc.new=data.frame(x=0.0, y=30.0, moisture=25.0, season=TRUE)
coordinates(sc.new)=c('x','y')
predict(g.tr, sc.new, BLUE = TRUE)
predict(g.tr, sc.new, BLUE = TRUE) * 31
predict(g.tr, sc.new, BLUE = TRUE)
1.213959 * 31
vgm
vgm()
v2 <- variogram(growth ~ -1 + as.factor(season):as.factor(canopy) + moisture:as.factor(canopy), treegrowth)
v2
plot(v2)
v2.fit <- fit.variogram(v2, vgm(0.1, "Exp", 3000), fit.method = 7, fit.sills = c(FALSE, TRUE)) # 7 - by default (Weighted least squares)
# I did't indicate nugget, so model don't use it
v2.fit # here we see psill and range (estimated)
plot(v2, v2.fit)
v2 <- variogram(growth ~ -1 + as.factor(season):as.factor(canopy) + moisture:as.factor(canopy), treegrowth)
v2
plot(v2)
v2.fit <- fit.variogram(v2, vgm(0.1, "Exp", 3000), fit.method = 7, fit.sills = c(FALSE, TRUE)) # 7 - by default (Weighted least squares)
# I did't indicate nugget, so model don't use it
v2.fit # here we see psill and range (estimated)
plot(v2, v2.fit)
g2.tr <- gstat(formula = -1 + as.factor(season):as.factor(canopy) + moisture:as.factor(canopy), data = treegrowth, model = v2.fit)
# b) Estimate the parameters b0,0, b0,1
# and b1 using the generalized least squares method.
g.tr <- gstat(formula = growth ~ -1 + as.factor(season) + moisture, data = treegrowth, model = v1.fit)
summary(g.tr)
g2.tr <- gstat(formula = -1 + as.factor(season):as.factor(canopy) + moisture:as.factor(canopy), data = treegrowth, model = v2.fit)
as.factor(season)
g2.tr <- gstat(formula = growth ~ -1 + as.factor(season):as.factor(canopy) + moisture:as.factor(canopy), data = treegrowth, model = v2.fit)
summary(g2.tr)
s4.new=data.frame(x=0.0, y=0.0, moisture=0.0, season=FALSE, canopy=FALSE) # UTM coordinates
coordinates(s4.new)=c('x','y')
predict(g2.tr, s4.new, BLUE = TRUE) # var1.pred = 1.117702 - b_0_0_0
lm(growth ~ -1 + as.factor(season):as.factor(canopy) + moisture:as.factor(canopy), data = treegrowth)
s5.new=data.frame(x=0.0, y=0.0, moisture=0.0, season=FALSE, canopy=TRUE) # UTM coordinates
coordinates(s5.new)=c('x','y')
predict(g2.tr, s5.new, BLUE = TRUE) # var1.pred = 1.117702 - b_0_0_1
coef(g2.tr)
lm_fit <- lm(growth ~ -1 + as.factor(season):as.factor(canopy) + moisture:as.factor(canopy), data = treegrowth)
coef(lm_fit)
# b) Estimate the parameters b0,0, b0,1
# and b1 using the generalized least squares method.
lm(growth ~ -1 + as.factor(season) + moisture, data = treegrowth)
treegrowth <- read.table("treegrowth.txt", h=TRUE)
## Define the sample coordinates (transform Table to SpatialPointsDataFrame)
coordinates(treegrowth) <- c('x', 'y')
v1 <- variogram(growth ~ -1 + as.factor(season) + moisture, treegrowth)
v1
plot(v1)
v1.fit <- fit.variogram(v1, vgm(0.1, "Sph", 1000, 0.1), fit.method = 7) # 7 - by default (Weighted least squares)
# I did't indicate nugget, so model don't use it
v1.fit # here we see psill and range (estimated)
plot(v1, v1.fit)
g.tr <- gstat(formula = growth ~ -1 + as.factor(season) + moisture, data = treegrowth, model = v1.fit)
summary(g.tr)
s0.new=data.frame(x=0.0, y=0.0, moisture=0.0, season=FALSE) # UTM coordinates
coordinates(s0.new)=c('x','y')
predict(g.tr, s0.new, BLUE = TRUE) # var1.pred = 1.117702 - b_0_0
s1.new=data.frame(x=0.0, y=0.0, moisture=0.0, season=TRUE) # UTM coordinates
coordinates(s1.new)=c('x','y')
predict(g.tr, s1.new, BLUE = TRUE) # var1.pred = 0.9080086 - b_0_1
s2.new=data.frame(x=0.0, y=0.0, moisture=1.0, season=FALSE) # UTM coordinates
coordinates(s2.new)=c('x','y')
predict(g.tr, s2.new, BLUE = TRUE) # var1.pred = 1.12994
sc.new=data.frame(x=0.0, y=0.0, moisture=25.0, season=TRUE)
coordinates(sc.new)=c('x','y')
predict(g.tr, sc.new, BLUE = TRUE) # var1.pred = 1.213959
1.213959 * 31 # Question was about total growth during July (so all days in July)
v2 <- variogram(growth ~ -1 + as.factor(season):as.factor(canopy) + moisture:as.factor(canopy), treegrowth)
v2
plot(v2)
v2.fit <- fit.variogram(v2, vgm(0.1, "Exp", 3000), fit.method = 7, fit.sills = c(FALSE, TRUE)) # 7 - by default (Weighted least squares)
# I did't indicate nugget, so model don't use it
v2.fit # here we see psill and range (estimated)
plot(v2, v2.fit)
g2.tr <- gstat(formula = growth ~ -1 + as.factor(season):as.factor(canopy) + moisture:as.factor(canopy), data = treegrowth, model = v2.fit)
summary(g2.tr)
s4.new=data.frame(x=0.0, y=0.0, moisture=0.0, season=FALSE, canopy=FALSE) # UTM coordinates
coordinates(s4.new)=c('x','y')
predict(g2.tr, s4.new, BLUE = TRUE) # var1.pred = 1.117702 - b_0_0_0
s5.new=data.frame(x=0.0, y=0.0, moisture=0.0, season=FALSE, canopy=TRUE) # UTM coordinates
coordinates(s5.new)=c('x','y')
predict(g2.tr, s5.new, BLUE = TRUE) # var1.pred = 1.117702 - b_0_0_1
lm_fit <- lm(growth ~ -1 + as.factor(season):as.factor(canopy) + moisture:as.factor(canopy), data = treegrowth)
v2.fit <- fit.variogram(v2, vgm(0.1, "Exp", 3000), fit.method = 7, fit.sills = c(FALSE, TRUE)) # 7 - by default (Weighted least squares)
# I didт't indicate nugget, so model don't use it
v2.fit # here we see psill and range (estimated)
v2.fit <- fit.variogram(v2, vgm(0.1, "Exp", 3000), fit.method = 7) # 7 - by default (Weighted least squares)
# I didт't indicate nugget, so model don't use it
v2.fit # here we see psill and range (estimated)
plot(v2, v2.fit)
g2.tr <- gstat(formula = growth ~ -1 + as.factor(season):as.factor(canopy) + moisture:as.factor(canopy), data = treegrowth, model = v2.fit)
summary(g2.tr)
s4.new=data.frame(x=0.0, y=0.0, moisture=0.0, season=FALSE, canopy=FALSE) # UTM coordinates
coordinates(s4.new)=c('x','y')
predict(g2.tr, s4.new, BLUE = TRUE) # var1.pred = 1.117702 - b_0_0_0
s5.new=data.frame(x=0.0, y=0.0, moisture=0.0, season=FALSE, canopy=TRUE) # UTM coordinates
coordinates(s5.new)=c('x','y')
predict(g2.tr, s5.new, BLUE = TRUE) # var1.pred = 1.117702 - b_0_0_1
v2.fit <- fit.variogram(v2, vgm(0.1, "Exp", 3000,0), fit.method = 7) # 7 - by default (Weighted least squares)
# I didт't indicate nugget, so model don't use it
v2.fit # here we see psill and range (estimated)
v2.fit <- fit.variogram(v2, vgm(0.1, "Exp", 3000), fit.method = 7) # 7 - by default (Weighted least squares)
# I didт't indicate nugget, so model don't use it
v2.fit # here we see psill and range (estimated)
plot(v2, v2.fit)
g2.tr <- gstat(formula = growth ~ -1 + as.factor(season):as.factor(canopy) + moisture:as.factor(canopy), data = treegrowth, model = v2.fit)
summary(g2.tr)
s4.new=data.frame(x=0.0, y=0.0, moisture=0.0, season=FALSE, canopy=FALSE) # UTM coordinates
coordinates(s4.new)=c('x','y')
predict(g2.tr, s4.new, BLUE = TRUE) # var1.pred = 1.117702 - b_0_0_0
s5.new=data.frame(x=0.0, y=0.0, moisture=0.0, season=FALSE, canopy=TRUE) # UTM coordinates
s5.new=data.frame(x=0.0, y=0.0, moisture=0.0, season=FALSE, canopy=TRUE) # UTM coordinates
coordinates(s5.new)=c('x','y')
predict(g2.tr, s5.new, BLUE = TRUE) # var1.pred = 1.117702 - b_0_0_1
coef(lm_fit)
summary(lm_fit)
predict(g2.tr, s5.new, BLUE = FALSE) # var1.pred = 0.8614567 - b_0_0_1
s5.new=data.frame(x=0.0, y=0.0, moisture=0.0, season=FALSE, canopy=TRUE) # UTM coordinates
coordinates(s5.new)=c('x','y')
predict(g2.tr, s5.new, BLUE = FALSE) # var1.pred = 0.8614567 - b_0_0_1
predict(g2.tr, s5.new, BLUE = TRUE) # var1.pred = 0.8614567 - b_0_0_1
s6.new=data.frame(x=0.0, y=0.0, moisture=1.0, season=FALSE, canopy=TRUE) # UTM coordinates
coordinates(s6.new)=c('x','y')
predict(g2.tr, s6.new, BLUE = TRUE) # var1.pred = 0.8614567 - b_0_0_1
0.8901377 - 0.8614567
s7.new=data.frame(x=0.0, y=0.0, moisture=1.0, season=FALSE, canopy=FALSE) # UTM coordinates
coordinates(s7.new)=c('x','y')
predict(g2.tr, s7.new, BLUE = TRUE) # var1.pred = 0.8901377 = b_0_0_0 + b_1_0
0.637564 - 0.6261478
library(nlmeU) ## --> for the dataset
library(nlme)
plants_mood <- read.table("plants_mood.txt", h=TRUE)
View(plants_mood)
lm(mood ~ plants + light + social, plants_mood)
lme_model <- lme(mood ~ plants + light + social, random =
~1|as.factor(zone_id), data = plants_mood)
summary(lme_model)
summary(lm(mood ~ plants + light + social, plants_mood))
summary(lme_model)
get_variance_residual(lme_model)
library(insight)
get_variance_random(lme_model)
get_variance_residual(lme_model)
summary(lme_model)
VarCorr(lme_model)
var_b <- get_variance_random(lme_model)
var_eps <- get_variance_residual(lme_model)
PVRE <- var_b/(var_b+var_eps)
data <- read.table("plants_mood.txt", h=TRUE)
# all groups has 100
for (i in 1:20){
print(sum(data["zone_id"] == 7))
}
data <- data.frame(
mood = data["mood"],
plants = data["plants"],
light = data["light"],
social = data["social"],
zone_id = data["zone_id"],
num_part = as.factor(rep(100, 20*100))
)
lme(mood ~ plants + light + social,
data = data)
lme(mood ~ plants + light + social,
~1|as.factor(zone_id),
data = data)
# bi_1ni - means random intercept
lme_model <- lme(mood ~ plants + light + social, random =
~1|as.factor(zone_id), data = plants_mood)
summary(lme_model)
# bi_1ni - means random intercept
lme_model <- lme(mood ~ plants + light + social, random =
~1|as.factor(zone_id), data = plants_mood)
plants_mood <- read_table("plants_mood.txt", h=TRUE)
plants_mood <- read.table("plants_mood.txt", h=TRUE)
lme_model <- lme(mood ~ plants + light + social, random =
~1|as.factor(zone_id), data = plants_mood)
summary(lme_model)
var_b <- get_variance_random(lme_model)
var_eps <- get_variance_residual(lme_model)
PVRE <- var_b/(var_b+var_eps)
PVRE
PVRE # 0.3337571
var_b, var_eps
var_b
var_eps
summary(lme_model)
1.239029^2
getVarCov(lme_model)
lme_model2 <- lme(mood ~ plants + light + social, random =
~1|as.factor(zone_id),
weights = varPower(form = ~zone_id) ,data = plants_mood)
summary(lme_model2)
lme_model2 <- lme(mood ~ plants + light + social, random =
~1|as.factor(zone_id),
weights = varPower(form = ~social) ,data = plants_mood)
summary(lme_model2)
View(plants_mood)
lme_model2 <- lme(mood ~ plants + light + social, random =
~1|as.factor(zone_id),
weights = varPower(form = ~social:as.factor(zone_id)) ,data = plants_mood)
summary(lme_model2)
# c) Should M2 be preferred over M1? Support your answer with a test.
anova(lme_model, lme_model2)
predict(lme_model2)
# d) Estimate (using M2) the mood of a person having 5 plants,
# 12 hours of natural light exposure and 5 hours of in-person interaction per day.
test.data = data.frame(zone_id= '50', plants=5, light = 12, social=5)
predict(lme_model2, test_data)
# d) Estimate (using M2) the mood of a person having 5 plants,
# 12 hours of natural light exposure and 5 hours of in-person interaction per day.
test_data = data.frame(zone_id= '50', plants=5, light = 12, social=5)
predict(lme_model2, test_data)
# d) Estimate (using M2) the mood of a person having 5 plants,
# 12 hours of natural light exposure and 5 hours of in-person interaction per day.
test_data = data.frame(zone_id= '1', plants=5, light = 12, social=5)
predict(lme_model2, test_data)
# d) Estimate (using M2) the mood of a person having 5 plants,
# 12 hours of natural light exposure and 5 hours of in-person interaction per day.
test_data = data.frame(zone_id= '4', plants=5, light = 12, social=5)
predict(lme_model2, test_data)
# d) Estimate (using M2) the mood of a person having 5 plants,
# 12 hours of natural light exposure and 5 hours of in-person interaction per day.
test_data = data.frame(zone_id= '21', plants=5, light = 12, social=5)
predict(lme_model2, test_data, allow.new.levels = TRUE)
# d) Estimate (using M2) the mood of a person having 5 plants,
# 12 hours of natural light exposure and 5 hours of in-person interaction per day.
test_data = data.frame(zone_id= '20', plants=5, light = 12, social=5)
predict(lme_model2, test_data, allow.new.levels = TRUE)
# d) Estimate (using M2) the mood of a person having 5 plants,
# 12 hours of natural light exposure and 5 hours of in-person interaction per day.
test_data = data.frame(zone_id= '21', plants=5, light = 12, social=5)
predict(lme_model2, test_data, allow.new.levels = TRUE, re.form=NA)
predict(lme_model2, test_data, allow.new.levels = TRUE)
# d) Estimate (using M2) the mood of a person having 5 plants,
# 12 hours of natural light exposure and 5 hours of in-person interaction per day.
test_data = data.frame(zone_id= '20', plants=5, light = 12, social=5)
predict(lme_model2, test_data, allow.new.levels = TRUE)
# d) Estimate (using M2) the mood of a person having 5 plants,
# 12 hours of natural light exposure and 5 hours of in-person interaction per day.
test_data = data.frame(zone_id= '2', plants=5, light = 12, social=5)
predict(lme_model2, test_data, allow.new.levels = TRUE)
summary(lme_model2)
predict(lme_model2, test_data, levels = TRUE)
# d) Estimate (using M2) the mood of a person having 5 plants,
# 12 hours of natural light exposure and 5 hours of in-person interaction per day.
test_data = data.frame(zone_id= '21', plants=5, light = 12, social=5)
predict(lme_model2, test_data, levels = TRUE)
predict(lme_model2, test_data, level = TRUE)
predict(lme_model2, test_data, level = FALSE)
summary(lme_model2)
var_eps
var_b2 <- get_variance_random(lme_model2)
var_eps2 <- get_variance_residual(lme_model2)
var_eps2
sqrt(var_eps2)
lme_model2 <- lme(mood ~ plants + light + social, random =
~1|as.factor(zone_id),
weights = varPower(form = ~social) ,data = plants_mood)
summary(lme_model2)
lme_model2 <- lme(mood ~ plants + light + social, random =
~1|as.factor(zone_id),
weights = varPower(form = ~social) ,data = plants_mood)
summary(lme_model2)
# c) Should M2 be preferred over M1? Support your answer with a test.
anova(lme_model, lme_model2) # so model with heteroscedastic residuals better
# d) Estimate (using M2) the mood of a person having 5 plants,
# 12 hours of natural light exposure and 5 hours of in-person interaction per day.
test_data = data.frame(zone_id= '21', plants=5, light = 12, social=5)
predict(lme_model2, test_data, level = FALSE)
var_b2 <- get_variance_random(lme_model2)
var_eps2 <- get_variance_residual(lme_model2)
sqrt(var_eps2)
# c) Should M2 be preferred over M1? Support your answer with a test.
anova(lme_model, lme_model2) # so model with heteroscedastic residuals better
plants_mood <- read.table("plants_mood.txt", h=TRUE)
lme_model <- lme(mood ~ plants + light + social, random =
~1|as.factor(zone_id), data = plants_mood)
summary(lme_model)
var_b <- get_variance_random(lme_model)
var_eps <- get_variance_residual(lme_model)
var_b
var_eps
PVRE <- var_b/(var_b+var_eps) # we can take them from summary as ^2 of StdDev
PVRE # 0.3337571 - high value (hihg percent of variance eplained by groups)
lme_model2 <- lme(mood ~ plants + light + social, random =
~1|as.factor(zone_id),
weights = varPower(form = ~social) ,data = plants_mood)
library(nlmeU) ## --> for the dataset
library(nlme)
library(insight)
plants_mood <- read.table("plants_mood.txt", h=TRUE)
lme_model <- lme(mood ~ plants + light + social, random =
~1|as.factor(zone_id), data = plants_mood)
summary(lme_model)
var_b <- get_variance_random(lme_model)
var_eps <- get_variance_residual(lme_model)
var_b
var_eps
PVRE <- var_b/(var_b+var_eps) # we can take them from summary as ^2 of StdDev
PVRE # 0.3337571 - high value (hihg percent of variance eplained by groups)
lme_model2 <- lme(mood ~ plants + light + social, random =
~1|as.factor(zone_id),
weights = varPower(form = ~social) ,data = plants_mood)
summary(lme_model2)
# c) Should M2 be preferred over M1? Support your answer with a test.
anova(lme_model, lme_model2) # so model with heteroscedastic residuals better
treegrowth <- read.table("treegrowth.txt", h=TRUE)
## Define the sample coordinates (transform Table to SpatialPointsDataFrame)
coordinates(treegrowth) <- c('x', 'y')
library(sp)           ## Data management
library(lattice)      ## Data management
library(geoR)         ## Geostatistics
library(gstat)        ## Geostatistics
library(nlme)
treegrowth <- read.table("treegrowth.txt", h=TRUE)
## Define the sample coordinates (transform Table to SpatialPointsDataFrame)
coordinates(treegrowth) <- c('x', 'y')
v1 <- variogram(growth ~ -1 + as.factor(season) + moisture, treegrowth)
v1
plot(v1)
v1.fit <- fit.variogram(v1, vgm(0.1, "Sph", 1000, 0.1), fit.method = 7) # 7 - by default (Weighted least squares)
# I did't indicate nugget, so model don't use it
v1.fit # here we see psill and range (estimated)
plot(v1, v1.fit)
g.tr <- gstat(formula = growth ~ -1 + as.factor(season) + moisture, data = treegrowth, model = v1.fit)
summary(g.tr)
s0.new=data.frame(x=0.0, y=0.0, moisture=0.0, season=FALSE) # UTM coordinates
coordinates(s0.new)=c('x','y')
# I did't indicate nugget, so model don't use it
v1.fit # here we see psill and range (estimated)
library(lme4)
treegrowth <- read.table("treegrowth.txt", h=TRUE)
## Define the sample coordinates (transform Table to SpatialPointsDataFrame)
coordinates(treegrowth) <- c('x', 'y')
v1 <- variogram(growth ~ -1 + as.factor(season) + moisture, treegrowth)
v1
plot(v1)
v1.fit <- fit.variogram(v1, vgm(0.1, "Sph", 1000, 0.1), fit.method = 7) # 7 - by default (Weighted least squares)
v1.fit # here we see psill and range (estimated)
plot(v1, v1.fit)
g.tr <- gstat(formula = growth ~ -1 + as.factor(season) + moisture, data = treegrowth, model = v1.fit)
summary(g.tr)
s0.new=data.frame(x=0.0, y=0.0, moisture=0.0, season=FALSE) # UTM coordinates
coordinates(s0.new)=c('x','y')
predict(g.tr, s0.new, BLUE = TRUE) # var1.pred = 1.117702 - b_0_0
s1.new=data.frame(x=0.0, y=0.0, moisture=0.0, season=TRUE) # UTM coordinates
coordinates(s1.new)=c('x','y')
predict(g.tr, s1.new, BLUE = TRUE) # var1.pred = 0.9080086 - b_0_1
s2.new=data.frame(x=0.0, y=0.0, moisture=1.0, season=FALSE) # UTM coordinates
coordinates(s2.new)=c('x','y')
predict(g.tr, s2.new, BLUE = TRUE) # var1.pred = 1.12994
sc.new=data.frame(x=0.0, y=0.0, moisture=25.0, season=TRUE)
coordinates(sc.new)=c('x','y')
predict(g.tr, sc.new, BLUE = TRUE) # var1.pred = 1.213959
1.213959 * 31 # Question was about total growth during July (so all days in July)
v2 <- variogram(growth ~ -1 + as.factor(season):as.factor(canopy) + moisture:as.factor(canopy), treegrowth)
v2
v2 <- variogram(growth ~ -1 + as.factor(season):as.factor(canopy) + moisture:as.factor(canopy), treegrowth)
v2
plot(v2)
summary(lm(growth ~ -1 + as.factor(season):as.factor(canopy) + moisture:as.factor(canopy), treegrowth))
